{"version":3,"sources":["components/nav-bar.tsx","components/Modal.tsx","constants/modal-messages.ts","components/InfoContent.tsx","components/MainContent.tsx","App.tsx","index.tsx","registerServiceWorker.js"],"names":["NavBar","className","href","Modal","onClose","show","message","console","log","style","position","top","bottom","left","right","backgroundColor","padding","borderRadius","maxWidth","minHeight","margin","onClick","ModalMessages","InfoContent","handler","outText","setText","useCallback","MainContent","useState","styleState","setStyleState","toggleColor","styles","useMemo","onMouseEnter","App","openState","setOpenState","textState","setTextState","toggleModal","renderText","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error"],"mappings":"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","file":"static/js/main.808d10c7.chunk.js","sourcesContent":["import React from 'react';\n\nexport const NavBar: React.FC = () => {\n    return (\n      <div className=\"banner\">\n        <nav>\n          <ul className=\"nav-bar\">\n            <li className=\"nav-link\"> <a href=\"/\">HOME</a></li>\n            <li className=\"nav-link\"> <a href=\"http://www.google.com\">ABOUT</a> </li>\n            <li className=\"nav-link\"> <a href=\"https://thecultivator.wordpress.com/?WordPress=My+WordPress\">CONTACT</a></li>\n            <li className=\"nav-link\"> <a href=\"https://mgwismer.github.io/PhotoGallery/ThePath.html#buttons\">HISTORY</a></li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n","import React from 'react';\n\ntype OwnProps = {\n  onClose: () => void;\n  show: boolean;\n  message: string;\n};\n\nexport const Modal: React.FC<OwnProps> = ({ onClose, show, message }) => {\n    console.log('modal ', message);\n    // The gray background\n    /** @type {{search: React.CSSProperties}} */\n    const backdropStyle = {\n      position: 'fixed' as 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // The modal \"window\"\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      maxWidth: 500,\n      minHeight: 300,\n      margin: '0 auto',\n      padding: 30\n    };\n\n    return (\n      show ? \n      <div className=\"backdrop\" style={backdropStyle}>\n        <div className=\"modal\" style={modalStyle}>\n          {message}\n          <div className=\"footer\">\n            <button onClick={onClose}>\n              Close\n            </button>\n          </div>\n        </div>\n      </div> : null\n    );\n  }\n\n\n\n","export const ModalMessages = {\n    nature: 'Wissahickon Valley Park is a rustic, natural park that offers numerous hiking, biking, horseback riding, and other recreational opportunities. Forbidden Drive is a well traveled biking, walking, and bridle trail that follows the Wissahickon from Manayunk through the Valley. There are also miles of side trails that wind through the wooded hillside. The Valley Green Inn offers exceptional dining in a 19th century roadside inn along Forbidden Drive. The Wissahickon Environmental Center at the Andorra Natural Area is a great educational venue for school groups and offers a variety of programs, incluidng a summer day camp. The Wissahickon Valley is one of fewer than 600 National Natural Landmarks in America.',\n    shops: 'Chestnut Hill is home to more than 100 unique shops and businesses, most of them in convenient storefronts clustered on Germantown Avenue and Bethlehem Pike. Antiques, gifts and clothes, banks and spas, two yarn stores, two cigar stores, two independent toy stores, an old fashioned candy store, a neighborhood co-op grocery, a farmersâ€™ market,  a country market and a variety of other stores await you.',\n    realEstate: 'Charming little cottages and unique stately homes. All of it and more can be found in Wyndmoor. Great public schools, low crime, friendly neighbors, access to public transportation, local police involved, libraries everywhere what more could one ask for.',\n    colleges: 'At Chestnut Hill College, we emphasize the growth of the whole person. That means we strive to provide our students with not only an enriching and challenging academic environment, but also with an exciting social life, a healthy spiritual life and a well-rounded active life.'\n}","import React, { useCallback } from 'react';\nimport { ModalMessages } from '../constants/modal-messages';\n\ntype InfoProps = {\n    handler: () => void;\n    outText: (message: string) => void;\n  }\n  \nexport const InfoContent: React.FC<InfoProps> = ({ handler, outText }) => {\n  \n    const setText = useCallback((message) => {\n      console.log('clicked the picture ', message);\n      handler();\n      outText(message);\n    }, [handler, outText])\n  \n    return (\n      <div className=\"image-container\">\n        <div\n          className=\"nature-image\"\n          onClick={() => setText(ModalMessages.nature)}\n        >\n          <h2\n            className=\"image-quote\"> Stroll the paths </h2>\n        </div>\n        <div\n          className=\"shops-image\"\n          onClick={() => setText(ModalMessages.shops)}\n        >\n          <h2 className=\"image-quote\"> Savor the Delights</h2>\n        </div>\n        <div\n          className=\"home-image\"\n          onClick={() => setText(ModalMessages.realEstate)} >\n          <h2 className=\"image-quote\"> Live the Dream </h2>\n        </div>\n        <div\n          className=\"college-image\"\n          onClick={() => setText(ModalMessages.colleges)} >\n          <h2 className=\"image-quote\"> Find your Future </h2>\n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useCallback, useMemo } from \"react\";\n\ntype MainProps = {\n    handler: () => void;\n  }\n\nexport const MainContent: React.FC<MainProps> = ({ handler }) => {\n  \n    const [styleState, setStyleState] = useState<string>('cyan')\n  \n    const toggleColor = useCallback(() => {\n      setStyleState('pink');\n    },[])\n  \n    const styles = useMemo(() => {\n      return ({ backgroundColor: styleState })\n    }, [styleState])\n    \n    return (\n      <div\n        className=\"main-header main-container\"\n        onMouseEnter={toggleColor}\n        onClick={handler}\n        style={styles}\n      >\n        <div className=\"main-header\">\n          <h1 className=\"h1-header\"> Welcome <br /> to <br /> Wyndmoor </h1>\n        </div>\n      </div>\n    );\n  }\n  ","import React, { useState, useCallback } from 'react';\nimport { NavBar } from  './components/nav-bar';\nimport { Modal } from './components/Modal';\nimport { InfoContent} from './components/InfoContent';\nimport { MainContent} from './components/MainContent';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [openState, setOpenState] = useState(false);\n  const [textState, setTextState] = useState('');\n\n  const toggleModal = (() => {\n    console.log('open state', openState);\n    setOpenState(!openState)\n  });\n\n  const renderText = useCallback((message: string) => {\n    console.log('inside renderText',message)\n    setTextState(message);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <MainContent handler={() => {}}/>\n      <InfoContent handler={toggleModal} outText={renderText} />\n      <Modal\n        show={openState}\n        onClose={toggleModal}\n        message={textState}\n      >\n        This is my modal\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n    registerServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}